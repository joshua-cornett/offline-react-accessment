{
  "name": "solution",
  "version": "1.2.0",
  "author": "Joshua Cornett",
  "description": "Offline assessment taken in pursuit of a front-end position with Microsoft",
  "homepage": "https://github.com/joshua-cornett/offline-react-accessment",
  "private": true,
  "devDependencies": {
    "autoprefixer": "*",
    "eslint": "*",
    "eslint-config-prettier": "*",
    "eslint-plugin-import": "*",
    "eslint-plugin-jsx-a11y": "*",
    "eslint-plugin-react": "*",
    "eslint-plugin-react-hooks": "*",
    "jest": "^27.5.1",
    "jsdoc": "^4.0.2",
    "prettier": "^3.2.5"
  },
  "dependencies": {
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "auto-changelog": "*",
    "prompt": "*",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1",
    "semver": "*",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "version-prompt-file": "node -e \"const fs = require('fs'); const semver = require('semver'); const prompt = require('prompt'); const currentVersion = require('./package.json').version; prompt.start(); prompt.get({ properties: { version: { description: `Current version is ${currentVersion}. Enter the version (press Enter to keep current or specify major, minor, patch):` } } }, (err, result) => { const newVersion = semver.valid(result.version.trim()) || currentVersion; const versionFile = './temp-version.txt'; fs.writeFileSync(versionFile, newVersion); console.log(newVersion); })\"",
    "version": "npm run version-prompt-file --ignore-scripts && node -e \"const fs = require('fs'); const semver = require('semver'); const currentVersion = require('./package.json').version; const versionFile = './temp-version.txt'; try { const newVersion = fs.readFileSync(versionFile, 'utf8').trim(); fs.unlinkSync(versionFile); require('fs').writeFileSync('./package.json', JSON.stringify(Object.assign(require('./package.json'), { version: newVersion }), null, 2)); } catch (error) { console.error('Error reading or deleting version file:', error); process.exit(1); }\" && git add package.json && git commit --amend --no-edit",
    "changelog": "auto-changelog --sort-commits date && git add CHANGELOG.md && git commit --amend --no-edit",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx}\"",
    "lint": "eslint \"src/**/*.{js,jsx,ts,tsx}\" --quiet",
    "docs": "jsdoc -c jsdoc.config.json",
    "precommit": "npm run format && npm run docs && git add . && node -e \"console.log('Ready for commit - DON\\'T FORGET TO RUN npm run postcommit AFTERWARDS!')\"",
    "postcommit": "npm run version && git add package.json && npm run changelog"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "auto-changelog": {
    "output": "CHANGELOG.md",
    "template": "keepachangelog",
    "unreleased": true,
    "commitLimit": false
  }
}